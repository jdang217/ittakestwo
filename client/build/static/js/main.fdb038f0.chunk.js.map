{"version":3,"sources":["components/Navbar/NavbarElements.js","components/Navbar/index.js","pages/index.js","pages/games.js","pages/lobbies.js","pages/leaderboards.js","pages/about.js","pages/signup.js","pages/signin.js","App.js","serviceWorker.js","index.js"],"names":["Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","NavBtn","NavBtnLink","Navbar","onClick","event","alert","document","getElementsByClassName","to","activeStyle","Home","style","display","justifyContent","alignItems","height","Games","Lobbies","Leaderboards","About","SignUp","useState","inputs","setInputs","userError","setUserError","visibility","size","userErrorIcon","setUserErrorIcon","handleChange","name","target","value","values","handleUsername","username","match","bodyFormData","FormData","append","axios","method","url","data","headers","then","response","console","log","icon","className","setTimeout","color","catch","err","status","request","bcrypt","require","onSubmit","preventDefault","genSalt","saltError","salt","hash","password","hashError","type","onChange","onBlur","pattern","SignIn","App","props","state","bestShows","get","res","setState","this","exact","path","element","React","Component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fdb038f0.chunk.js","sourcesContent":["import { FaBars } from 'react-icons/fa';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Nav = styled.nav`\r\n    background: #63D471;\r\n    height: 85px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 0.2rem calc((100vw - 1000px) / 2);\r\n    z-index: 12;\r\n    /* Third Nav */\r\n    /* justify-content: flex-start; */\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n    color: #808080;\r\n    display: flex;\r\n    align-items: center;\r\n    text-decoration: none;\r\n    padding: 0 1rem;\r\n    height: 100%;\r\n    cursor: pointer;\r\n    &.active {\r\n        color: #000000;\r\n    }\r\n`;\r\n\r\nexport const Bars = styled(FaBars)`\r\n    display: none;\r\n    color: #808080;\r\n    @media screen and (max-width: 768px) {\r\n        display: block;\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        transform: translate(-100%, 75%);\r\n        font-size: 1.8rem;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: -24px;\r\n    /* Second Nav */\r\n    /* margin-right: 24px; */\r\n    /* Third Nav */\r\n    /* width: 100vw;\r\n    white-space: nowrap; */\r\n    @media screen and (max-width: 768px) {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 24px;\r\n    /* Third Nav */\r\n    /* justify-content: flex-end;\r\n    width: 100vw; */\r\n    @media screen and (max-width: 768px) {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const NavBtnLink = styled(Link)`\r\n    border-radius: 4px;\r\n    background: #808080;\r\n    padding: 10px 22px;\r\n    color: #000000;\r\n    outline: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease-in-out;\r\n    text-decoration: none;\r\n    /* Second Nav */\r\n    margin-left: 24px;\r\n    &:hover {\r\n        transition: all 0.2s ease-in-out;\r\n        background: #fff;\r\n        color: #808080;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport {\r\n\tNav,\r\n\tNavLink,\r\n\tBars,\r\n\tNavMenu,\r\n\tNavBtn,\r\n\tNavBtnLink,\r\n} from './NavbarElements';\r\n\r\nconst Navbar = () => {\r\n\r\n\tconst handleSubmit = (event) => { \r\n\t\talert(\"bars clicked\");\r\n\t\tvar x = document.getElementsByClassName\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Nav>\r\n\t\t\t\t<Bars onClick={handleSubmit}/>\r\n\r\n\t\t\t\t<NavMenu>\r\n\t\t\t\t\t<NavLink to='/' activeStyle>\r\n\t\t\t\t\t\tHome\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink to='/games' activeStyle>\r\n\t\t\t\t\t\tGames\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink to='/lobbies' activeStyle>\r\n\t\t\t\t\t\tLobbies\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink to='/leaderboards' activeStyle>\r\n\t\t\t\t\t\tLeaderboards\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink to='/about' activeStyle>\r\n\t\t\t\t\t\tAbout\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink to='/sign-up' activeStyle>\r\n\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t{/* Second Nav */}\r\n\t\t\t\t\t{/* <NavBtnLink to='/sign-in'>Sign In</NavBtnLink> */}\r\n\t\t\t\t</NavMenu>\r\n\t\t\t\t<NavBtn>\r\n\t\t\t\t\t<NavBtnLink to='/sign-in'>Sign In</NavBtnLink>\r\n\t\t\t\t</NavBtn>\r\n\t\t\t</Nav>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst Home = () => {\r\nreturn (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'Right',\r\n                height: '100vh'\r\n            }}\r\n        >\r\n            <h1>Welcome to ItTakesTwo!</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst Games = () => {\r\nreturn (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'Right',\r\n                height: '100vh'\r\n            }}\r\n        >\r\n            <h1>Games</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Games;\r\n","import React from 'react';\r\n\r\nconst Lobbies = () => {\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'Right',\r\n                height: '100vh'\r\n            }}\r\n        >\r\n            <h1>Open Lobbies</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Lobbies;\r\n","import React from 'react';\r\n\r\nconst Leaderboards = () => {\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'Right',\r\n                height: '100vh'\r\n            }}\r\n        >\r\n            <h1>Competive Game Leaderboards</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Leaderboards;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'Right',\r\n                height: '100vh'\r\n            }}\r\n        >\r\n            <h1>Created by Jason Dang and Fariha Rafa</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import axios from 'axios';\r\nimport React from 'react';\r\nimport { useState } from \"react\";\r\nimport { FaCheckCircle, FaTimesCircle } from 'react-icons/fa';\r\nimport { ImSpinner2 } from 'react-icons/im';\r\n\r\nimport './signup.css';\r\n\r\nconst SignUp = () => {\r\n\r\n    //username and password inputs\r\n    const [inputs, setInputs] = useState({});\r\n    \r\n    //username error message\r\n    const [userError, setUserError] = useState('');\r\n    const [userErrorIcon, setUserErrorIcon] = useState(<FaTimesCircle visibility='hidden' size='25px'/>);\r\n\r\n    const handleChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        setInputs(values => ({...values, [name]: value}))\r\n    }\r\n\r\n    const handleUsername = (event) => {\r\n\r\n        var letterNumber = /^[0-9a-zA-Z]+$/;\r\n\r\n        if (!inputs.username || inputs.username === 0) {\r\n            setUserErrorIcon(<ImSpinner2 icon=\"spinner\" className=\"spinner\" size='25px'/>);\r\n            setTimeout(function() {setUserErrorIcon(<FaTimesCircle color='red' size='25px' />); }, 500);\r\n            setTimeout(function() {setUserError('Username cannot be empty     '); }, 500);\r\n        }\r\n        else if (!inputs.username.match(letterNumber)) {\r\n            setUserErrorIcon(<ImSpinner2 icon=\"spinner\" className=\"spinner\" size='25px'/>);\r\n            setTimeout(function() {setUserErrorIcon(<FaTimesCircle color='red' size='25px' />); }, 500);\r\n            setTimeout(function() {setUserError('       Characters must be Aa-Zz, 0-9, or _'); }, 500);\r\n        }\r\n        else {\r\n\r\n            var bodyFormData = new FormData();\r\n            bodyFormData.append('username', inputs.username);\r\n\r\n            axios({\r\n                method: \"post\",\r\n                url: \"/api/signup/\",\r\n                data: bodyFormData,\r\n                headers: { \"Content-Type\": \"multipart/form-data\", \r\n                        \"Signup-Part\": \"username\"\r\n                },\r\n            })\r\n            .then(function (response) {\r\n                //handle success\r\n                console.log(\"here\");\r\n                console.log(response);\r\n\r\n                //show loading and then check icon after .5 seconds\r\n                setUserErrorIcon(<ImSpinner2 icon=\"spinner\" className=\"spinner\" size='25px'/>);\r\n                setTimeout(function() {setUserErrorIcon(<FaCheckCircle color='#32cd32' size='25px' />); }, 500);\r\n                setTimeout(function() {setUserError(''); }, 500);\r\n            })\r\n            .catch(err => {\r\n                if (err.response) {\r\n                // client received an error response (5xx, 4xx)\r\n                    console.log(\"here1\");\r\n                    if (err.response.status === 403) {\r\n                        setUserErrorIcon(<ImSpinner2 icon=\"spinner\" className=\"spinner\" size='25px'/>);\r\n                        setTimeout(function() {setUserErrorIcon(<FaTimesCircle color='red' size='25px' />); }, 500);\r\n                        setTimeout(function() {setUserError('This username is already taken'); }, 500);\r\n                    }\r\n                } else if (err.request) {\r\n                // client never received a response, or request never left\r\n                    console.log(\"here2\");\r\n                } else {\r\n                // anything else\r\n                    console.log(\"here3\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleFocusOut = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        setInputs(values => ({...values, [name]: value}))\r\n\r\n        var letterNumber = /^[0-9a-zA-Z]+$/;\r\n\r\n        if (name === 'username') {\r\n            \r\n        }\r\n        else if (name === 'password') {\r\n\r\n        }\r\n        else {\r\n            console.log(\"type of input is not valid\");\r\n        }\r\n    }\r\n\r\n    const bcrypt = require(\"bcryptjs\");\r\n    const saltRounds = 10;\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        //check username availability\r\n        //console.log(inputs.username);\r\n\r\n        //check password security\r\n        //console.log(inputs.password);\r\n\r\n        //encrypt and insert into mongodb\r\n        bcrypt.genSalt(saltRounds, function (saltError, salt) {\r\n            if (saltError) {\r\n                throw saltError;\r\n            } else {\r\n                bcrypt.hash(inputs.password, salt, function(hashError, hash) {\r\n                if (hashError) {\r\n                    throw hashError;\r\n                } else {\r\n                    //insert into db\r\n                    //console.log(hash);\r\n                    var bodyFormData = new FormData();\r\n                    bodyFormData.append('username', inputs.username);\r\n                    bodyFormData.append('password', hash);\r\n\r\n                    axios({\r\n                        method: \"post\",\r\n                        url: \"/api/signup\",\r\n                        data: bodyFormData,\r\n                        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n                    })\r\n                    .then(function (response) {\r\n                        //handle success\r\n                        console.log(response);\r\n                    })\r\n                    .catch(function (response) {\r\n                        //handle error\r\n                        console.log(response);\r\n                    });\r\n                }\r\n              })\r\n            }\r\n        })  \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='title'>Sign Up</h1>\r\n            <br/>\r\n            <br/>\r\n            <div className='form'>\r\n                <form onSubmit={()=>{ handleUsername(); handleSubmit() }}>\r\n                    <label >Username:{'                   '} \r\n                    <br/> {'      '}  \r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"username\" \r\n                        value={inputs.username || \"\"} \r\n                        onChange={handleChange}\r\n                        onBlur={handleUsername}\r\n                        pattern=\"[a-zA-Z0-9-]+\"\r\n                    />\r\n                    </label> \r\n                    <label className='icon'> {userErrorIcon}</label>\r\n                    <br/>\r\n                    <label className='errors'>{userError}</label>\r\n                    <br/><br/>\r\n                    <label>Password:{'                           '} \r\n                    <br/>\r\n                        <input \r\n                        type=\"text\" \r\n                        name=\"password\" \r\n                        value={inputs.password || \"\"} \r\n                        onChange={handleChange}\r\n                        onBlur={handleFocusOut}\r\n                    />\r\n                    </label>\r\n                    <br/><br/>\r\n                    <input type=\"submit\" value=\"Sign Up!\" />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\n\r\nconst SignIn = () => {\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                justifyContent: 'Center',\r\n                alignItems: 'Right',\r\n                height: '100vh'\r\n            }}\r\n        >\r\n            <h1>Sign In</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from 'axios';\r\nimport \"./index.css\";\r\nimport \"./App.css\"\r\n\r\nimport Navbar from './components/Navbar';\r\nimport Home from './pages';\r\nimport Games from './pages/games';\r\nimport Lobbies from './pages/lobbies';\r\nimport Leaderboards from './pages/leaderboards';\r\nimport About from './pages/about';\r\nimport SignUp from './pages/signup';\r\nimport SignIn from './pages/signin';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bestShows: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount success\")\r\n    axios.get('/api/data')\r\n      .then(res => {\r\n        console.log(\"data recieved: \", res.data);\r\n        this.setState({ bestShows: res.data[0] });\r\n      })\r\n      .catch(alert);\r\n  }\r\n\r\n\r\n  render() {\r\n    console.log(\"render bestShows: \", this.state.bestShows)\r\n    return (\r\n      \r\n      <div>\r\n        <Router>\r\n          <Navbar />\r\n          <Routes>\r\n            <Route exact path='/' element={<Home />} />\r\n            <Route exact path='/games' element={<Games/>} />\r\n            <Route exact path='/lobbies' element={<Lobbies/>} />\r\n            <Route exact path='/leaderboards' element={<Leaderboards/>} />\r\n            <Route exact path='/about' element={<About />} />\r\n            <Route exact path='/sign-up' element={<SignUp/>} />\r\n            <Route exact path='/sign-in' element={<SignIn/>} />\r\n          </Routes>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\nmongo db example\r\n<ul>\r\n  {\r\n    Object.keys(this.state.bestShows).map((cur, idx) => (\r\n      <li>{cur} - {this.state.bestShows[cur]} </li>\r\n    ))\r\n  }\r\n</ul>\r\n*/\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n    <App />\r\n    </React.StrictMode>, \r\n    document.getElementById('root')\r\n\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}